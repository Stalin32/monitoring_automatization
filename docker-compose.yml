version: "3.9"
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
      - ./prometheus/alertmanager.yml:/etc/prometheus/alertmanager.yml
#      - logs:/var/log/prometheusquery.log
    restart: unless-stopped
    user: "root:root"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - logs:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafanaadmin 
      - GF_SERVER_DOMAIN=192.168.0.116
      - GF_RENDERING_SERVER_URL=http://192.168.0.116:8081/render
      - GR_RNDERING_CALLBACK_URL=http://192.168.0.116:3000
    restart: unless-stopped
    user: "root:root"

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: image-renderer
    ports:
      - "8081:8081"
    environment:
      TZ: "Europe/Moscow"
      - EABLE_METRICS=true
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
      resources:
        limits:
          memory: 256M  
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/data:/alertmanager/data
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/data:/loki/data
    restart: unless-stopped

  promtail:
    image: grafana/promtail
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml
      - ./promtail/data:/promtail/data
      - /var/log:/var/log
      - logs:/var/apps
    restart: unless-stopped
    user: "root:root"

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    restart: unless-stopped


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9443:9443"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data

volumes:
  logs:


##apt install graphicsmagick-imagemagick-compat -y
